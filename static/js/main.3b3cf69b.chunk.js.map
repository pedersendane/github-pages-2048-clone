{"version":3,"sources":["About.js","HighScoreBoard.js","Scores.js","HighScoreForm.js","App.js","index.js"],"names":["AboutSection","id","onToggle","e","target","attributes","open","scrollIntoView","document","getElementById","href","React","Component","formatDate","props","dateString","Date","toLocaleDateString","day","month","year","hour","minute","hour12","replace","console","log","HighScoreBoard","highScore","length","sort","a","b","parseInt","score","slice","map","index","className","name","createdAt","GetScores","useState","highScores","options","method","url","useEffect","getHighScores","axios","then","response","allScores","data","catch","error","HighScoreForm","state","value","handleChange","bind","handleSubmit","event","this","setState","preventDefault","postMessage","toString","alert","params","Object","keys","key","encodeURIComponent","join","headers","result","classList","add","innerHTML","style","display","onSubmit","type","onChange","BoardView","board","Board","window","location","reload","hasWon","keyCode","direction","move","touches","startX","screenX","startY","screenY","changedTouches","deltaX","deltaY","Math","abs","addEventListener","handleKeyDown","removeEventListener","cells","row","rowIndex","_","columnIndex","size","tiles","filter","tile","Fragment","onTouchStart","handleTouchStart","onTouchEnd","handleTouchEnd","tabIndex","onRestart","restartGame","GameEndOverlay","contents","hasLost","onClick","i","addTile","addRandomTile","setPositions","won","prototype","addScore","moveLeft","hasChanged","currentRow","resultRow","targetTile","shift","tile1","mergedInto","tile2","Infinity","Cell","TileView","nextProps","hasMoved","isNew","classArray","push","column","fromRow","toRow","fromColumn","toColumn","classes","rotateLeft","matrix","rows","columns","res","Tile","oldRow","oldColumn","markForDeletion","moveTo","apply","arguments","forEach","fourProbability","emptyCells","r","c","cell","random","newValue","clearOldTiles","d","canMove","dir","newRow","newColumn","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3b3cf69b.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default class AboutSection extends React.Component{\n    render() {\n        return (\n            <details id='aboutDetails'onToggle={(e) => {\n                if (e.target.attributes.open) {\n                    e.target.scrollIntoView();\n                } else {\n                    document.getElementById('boardDiv').scrollIntoView();\n                }\n            }}>\n                <summary >About This Project</summary>\n                <main>\n                    <h4>Front-End</h4>\n                    <ul>\n                        <li>React</li>\n                        <li>JSX</li>\n                        <li>SASS</li>\n                         Node.js, MongoDB, Heroku, and Atlas.\n                    </ul>\n                    <h4>Back-End/API</h4>\n                    <ul>\n                        <li>Node.js</li>\n                        <li>MongoDB</li>\n                        <li>Heroku</li>\n                        <li>Atlas</li>\n                    </ul>\n                         \n      \n                    <h4>Inspiration</h4>\n                    <ul>\n                        <li><a href=\"http://gabrielecirulli.github.io/2048/\">2048 by Gabriele Cirulli</a></li>\n                        <li>I was sick of all the ads while trying to play 2048</li>\n                        <li>I wanted to learn more about creating, hosting, and maintaing my own API's</li>\n                    </ul>\n                </main>\n                </details>\n        )\n    }\n}","import React from 'react';\nimport AboutSection from './About';\nfunction formatDate(props) {\n    var date = new Date(props)\n    var formatOptions = {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n    };\n    var dateString = date.toLocaleDateString('en-US', formatOptions);\n    // => \"02/17/2017, 11:32 PM\"\n\n    dateString = dateString.replace(',', '')\n        .replace('PM', 'p.m.')\n        .replace('AM', 'a.m.');\n    // => \"02/17/2017 11:32 p.m.\"\n    console.log(dateString);\n    return dateString;\n}\n\nexport default function HighScoreBoard(props) {\n    const highScore = (props) => {\n            const {\n                highScore\n            } = props;\n            if (highScore.length > 0) {\n                return (\n\n                    highScore\n                    .sort((a, b) => (parseInt(a.score) < parseInt(b.score)) ? 1 : -1)\n                    .slice(0, 20)\n                    .map((score, index) => {\n                        /*return (\n                            <div className = 'high-score' key = {score.id} >\n                                <h5>High Score {index + 1}:&nbsp;\n                                <span className=\"userScore\" >{score.score}</span>&nbsp;\n                                by <span className={`userName ${score.id}`}>{score.name}</span >\n                                </h5>\n                            </div>\n\n                        )\n                        */\n                        return (<div className='high-score' key={score.id} >\n                            <span className={`userName ${score.id}`}>{score.name}</span >:&nbsp;\n                            <span className=\"userScore\" ><strong>{score.score}</strong></span>&nbsp;\n                            points&nbsp;on&nbsp;<span>{formatDate(score.createdAt)}</span>\n                        </div>)\n                    })\n\n                )\n            } else {\n                return ( <p> No Highscores Found </p>)\n                }\n\n            }\n            return ( <>\n                <details id='highscoreDetails' onToggle={(e) => {\n                    if (e.target.attributes.open) {\n                        e.target.scrollIntoView();\n                    } else {\n                        document.getElementById('boardDiv').scrollIntoView();\n                    }\n                }}>\n                    <summary > High Scores </summary>\n                    <main>\n                        {highScore(props)} \n                    </main>\n                </details>\n                <AboutSection/>\n\n                </>)\n            }","import React, {\n    useState,\n    useEffect\n} from 'react'\n\nimport axios from 'axios';\nimport HighScoreBoard from './HighScoreBoard'\n\nexport function GetScores() {\n\n    const [highScore, highScores] = useState('');\n\n    const options = {\n        method: 'get',\n        //url: 'http://localhost:8000/scores',\n        url: 'https://highscore-api.herokuapp.com/scores',\n    }\n    \n    useEffect(() => {\n        getHighScores();\n    }, []);\n\n    const getHighScores = () => {\n        axios(options)\n            .then((response) => {\n                console.log(response);\n                const allScores = response.data;\n                highScores(allScores)\n            })\n            .catch(error => console.error(error));\n    }\n    return ( < HighScoreBoard highScore={highScore}/>)\n}\n\n\n","import React from 'react';\nimport {\n    v4 as uuidv4\n} from 'uuid';\nimport axios from 'axios';\nimport { GetScores } from './Scores';\n\nexport default class HighScoreForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            score: this.props.score\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            value: event.target.value\n        });\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        const postMessage = document.getElementById('postMessage')\n        \n        const score = this.state.score.toString();\n        if (this.state.value === '') {\n            alert(\"Please enter your name\")\n        }\n        else {\n            console.log(this.state.value)\n            console.log(this.state.score.toString())\n            const params = {\n                name: this.state.value,\n                score: score\n              };\n              const data = Object.keys(params)\n                .map((key) => `${key}=${encodeURIComponent(params[key])}`)\n                .join('&');\n              \n              console.log(data);\n              // => format=json&option=value\n                const options = {\n                    method: 'POST',\n                    headers: { 'content-type': 'application/x-www-form-urlencoded' },\n                    data,\n                    url: 'https://highscore-api.herokuapp.com/scores',\n                };\n            \n              axios(options)  \n                .then((result) => {\n            //console.log(result);\n                    postMessage.classList.add('alert-success');\n                    postMessage.innerHTML = 'Successfully posted a score of ' + this.state.score.toString() + ' for ' + this.state.value;\n                    document.getElementById('postScoreForm').style.display = 'none';\n\n            \n        }).catch((error) => {\n            console.log(error);\n            postMessage.classList.add('alert-danger');\n                    postMessage.innerHTML = 'Oops! There was an error posting a score of ' + this.state.score.toString() + ' for ' + this.state.value + '. Please try again.';\n                    \n        })\n\n    }\n}\n\n    render() {\n        const score = this.state.score.toString();\n        return (<>\n        <form id='postScoreForm' onSubmit={this.handleSubmit}>\n            <label > Enter your name to submit your high score:\n                <input type=\"text\" name=\"name\" value={this.state.value} onChange={this.handleChange} />\n            </label>\n                <br />\n                <input type=\"hidden\" id=\"score\" name=\"score\" value={score} />\n                <input type=\"submit\" value=\"Submit\" />\n        </form>      \n    </>\n    );\n}\n}\n\n/*import React from 'react';\nimport {\n    v4 as uuidv4\n} from 'uuid';\nimport axios from 'axios';\nimport { GetScores } from './Scores';\n\nexport default class HighScoreForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            score: this.props.score\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            value: event.target.value\n        });\n    }\n    handleSubmit(event) {\n        const score = this.state.score.toString();\n        const userNames = document.getElementsByClassName('userName');\n        var names = [];\n        var ids = [];\n        for (var name in userNames) {\n            if (userNames[name].innerHTML) {\n                names.push(userNames[name].innerHTML);\n                console.log(names);\n\n                var className = userNames[name].className;\n                ids.push(className.substring(9, className.length));\n                console.log(ids)\n            }\n        }                       \n\n        if (this.state.value === '') {\n            alert(\"Please enter your name\")\n        }\n        else {\n              \n            const params = {\n                name: this.state.value,\n                score: score\n              };\n              const data = Object.keys(params)\n                .map((key) => `${key}=${encodeURIComponent(params[key])}`)\n                .join('&');\n              \n              console.log(data);\n              // => format=json&option=value\n            var options;\n            if (names.includes(this.state.value)) {\n                var indexOfName = names.indexOf(this.state.value)\n                var id = ids[indexOfName]\n                 options = {\n                    method: 'put',\n                    headers: { 'content-type': 'application/x-www-form-urlencoded' },\n                    data,\n                    url: 'https://highscore-api.herokuapp.com/scores/' + id,\n                };\n            } else {\n                 options = {\n                    method: 'POST',\n                    headers: { 'content-type': 'application/x-www-form-urlencoded' },\n                    data,\n                    url: 'https://highscore-api.herokuapp.com/scores',\n                };\n            }\n              axios(options)  \n                .then((result) => {\n            console.log(result);\n            alert(this.state.value + ' submitted a high-score of: ' + this.state.score);\n            //event.preventDefault();\n        }).catch((error) => {\n            console.log(error);\n            alert(\"Sorry, it looks like there was an error submitting your score.\")\n        })\n\n    }\n}\n\n    render() {\n    return ( <>\n        <label > Enter your name to submit your high score:\n        <input type = \"text\"\n        value = {\n            this.state.value\n        }\n        onChange = {\n            this.handleChange\n        }\n            /> </label>\n        <br />\n        <button type = \"button\"\n        className = \"tryAgain\"\n        onClick = {\n            this.handleSubmit\n        } > Submit </button>\n    </>\n    );\n}\n}*/","import React from 'react';\nimport HighScoreForm from './HighScoreForm';\nimport { GetScores, PostHighScore } from './Scores';\n\nexport default class BoardView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: new Board(),\n    };\n  }\n  restartGame() {\n    this.setState({ board: new Board() });\n    window.location.reload(false); \n  }\n  handleKeyDown(event) {\n    if (this.state.board.hasWon()) {\n      return;\n    }\n    if (event.keyCode >= 37 && event.keyCode <= 40) {\n      event.preventDefault();\n      var direction = event.keyCode - 37;\n      \n      this.setState({board: this.state.board.move(direction)});\n    } else {\n      switch (true) {\n        case event.keyCode === 87:\n          direction = 1;\n          this.setState({ board: this.state.board.move(direction) });\n          break;\n          case event.keyCode === 65:\n           direction = 0;\n            this.setState({ board: this.state.board.move(direction) });\n          break;\n          case event.keyCode === 83:\n           direction = 3;\n            this.setState({ board: this.state.board.move(direction) });\n          break;\n          case event.keyCode === 68:\n           direction = 2;\n            this.setState({ board: this.state.board.move(direction) });\n          break;\n        default:\n          break;\n      }\n      //w = 87 = direction 1\n      //a = 65 = direction 0\n      //s = 83 = direction 3\n      //d = 68 = direction 2\n      \n    }\n  }\n  handleTouchStart(event) {\n    if (this.state.board.hasWon()) {\n      return;\n    }\n    if (event.touches.length !== 1) {\n      return;\n    }\n    this.startX = event.touches[0].screenX;\n    this.startY = event.touches[0].screenY;\n    event.preventDefault();\n  }\n  handleTouchEnd(event) {\n    if (this.state.board.hasWon()) {\n      return;\n    }\n    if (event.changedTouches.length !== 1) {\n      return;\n    }\n    var deltaX = event.changedTouches[0].screenX - this.startX;\n    var deltaY = event.changedTouches[0].screenY - this.startY;\n    var direction = -1;\n    if (Math.abs(deltaX) > 3 * Math.abs(deltaY) && Math.abs(deltaX) > 30) {\n      direction = deltaX > 0 ? 2 : 0;\n    } else if (Math.abs(deltaY) > 3 * Math.abs(deltaX) && Math.abs(deltaY) > 30) {\n      direction = deltaY > 0 ? 3 : 1;\n    }\n    if (direction !== -1) {\n      this.setState({board: this.state.board.move(direction)});\n    }\n  }\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown.bind(this));\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown.bind(this));\n  }\n  render() {\n    var cells = this.state.board.cells.map((row, rowIndex) => {\n      return (\n        <div key={rowIndex}>\n          { row.map((_, columnIndex) => <Cell key={rowIndex * Board.size + columnIndex} />) }\n        </div>\n      );\n    });\n\n    var tiles = this.state.board.tiles\n      .filter(tile => tile.value !== 0)\n      .map(tile => <TileView tile={tile} key={tile.id} />);\n    \n    var score = this.state.board.score\n    \n    return (\n      <React.Fragment>\n        <div className='scoreboard row'><h2 id='score'>Score: {score}</h2></div>\n      <div className='board' onTouchStart={this.handleTouchStart.bind(this)} onTouchEnd={this.handleTouchEnd.bind(this)} tabIndex=\"1\">\n          {cells}\n          {tiles}\n          <GameEndOverlay board={this.state.board} onRestart={this.restartGame.bind(this)} />\n        </div>\n        </React.Fragment>\n    );\n  }\n};\n\n\nvar GameEndOverlay = ({board, onRestart}) => {\n  var contents = '';\n   if (board.hasLost()) {\n      contents = <>\n                  <HighScoreForm score={board.score}/>\n                </>\n  }\n  if (!contents) {\n    return null;\n  }\n  return (\n    <div className='overlay'>\n      <div id='postMessage'></div>\n      {contents}\n      <button className=\"tryAgain\" onClick={onRestart} onTouchEnd={onRestart}>Play again</button>\n    </div>\n  );\n};\n\n\n\n\n\nvar Board = function () {\n  this.tiles = [];\n  this.cells = [];\n  for (var i = 0; i < Board.size; ++i) {\n    this.cells[i] = [this.addTile(), this.addTile(), this.addTile(), this.addTile()];\n  }\n  this.addRandomTile();\n  this.setPositions();\n  this.won = false;\n  this.score = 0;\n};\n\n\n\nBoard.prototype.addScore = function (props) {\n  this.score += props;\n}\n\n\n\nBoard.prototype.moveLeft = function () {\n  var hasChanged = false;\n  for (var row = 0; row < Board.size; ++row) {\n    var currentRow = this.cells[row].filter(tile => tile.value !== 0);\n    var resultRow = [];\n    for (var target = 0; target < Board.size; ++target) {\n      var targetTile = currentRow.length ? currentRow.shift() : this.addTile();\n      if (currentRow.length > 0 && currentRow[0].value === targetTile.value) {\n        var tile1 = targetTile;\n\n        targetTile = this.addTile(targetTile.value);\n\n        tile1.mergedInto = targetTile;\n        var tile2 = currentRow.shift();\n        tile2.mergedInto = targetTile;\n        targetTile.value += tile2.value;\n        //console.log(this)     this will allow you to see what the board is doing \n        \n        this.addScore(targetTile.value);\n      }\n      resultRow[target] = targetTile;\n      this.won |= (targetTile.value === Infinity);\n      hasChanged |= (targetTile.value !== this.cells[row][target].value);\n    }\n    this.cells[row] = resultRow;\n  }\n  return hasChanged;\n};\n\n\n\n\n\n\n\n\n\n\n\nclass Cell extends React.Component {\n  shouldComponentUpdate() {\n    return false;\n  }\n  render() {\n    return (\n      <span className='cell'>{''}</span>\n    );\n  }\n};\n\nclass TileView extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (this.props.tile !== nextProps.tile) {\n      return true;\n    }\n    if (!nextProps.tile.hasMoved() && !nextProps.tile.isNew()) {\n      return false;\n    }\n    return true;\n  }\n  render() {\n    var tile = this.props.tile;\n    var classArray = ['tile'];\n    classArray.push('tile' + this.props.tile.value);\n    if (!tile.mergedInto) {\n      classArray.push('position_' + tile.row + '_' + tile.column);\n    }\n    if (tile.mergedInto) {\n      classArray.push('merged');\n    }\n    if (tile.isNew()) {\n      classArray.push('new');\n    }\n    if (tile.hasMoved()) {\n      classArray.push('row_from_' + tile.fromRow() + '_to_' + tile.toRow());\n      classArray.push('column_from_' + tile.fromColumn() + '_to_' + tile.toColumn());\n      classArray.push('isMoving');\n    }\n    var classes = classArray.join(' ');\n    return (\n      <span className={classes}>{tile.value}</span>  \n    );\n  }\n}\n\nvar rotateLeft = function (matrix) {\n  var rows = matrix.length;\n  var columns = matrix[0].length;\n  var res = [];\n  for (var row = 0; row < rows; ++row) {\n    res.push([]);\n    for (var column = 0; column < columns; ++column) {\n      res[row][column] = matrix[column][columns - row - 1];\n    }\n  }\n  return res;\n};\n\nvar Tile = function (value, row, column) {\n  this.value = value || 0;\n  this.row = row || -1;\n  this.column = column || -1;\n  this.oldRow = -1;\n  this.oldColumn = -1;\n  this.markForDeletion = false;\n  this.mergedInto = null;\n  this.id = Tile.id++;\n};\n\nTile.id = 0;\n\nTile.prototype.moveTo = function (row, column) {\n  this.oldRow = this.row;\n  this.oldColumn = this.column;\n  this.row = row;\n  this.column = column;\n};\n\nTile.prototype.isNew = function () {\n  return this.oldRow === -1 && !this.mergedInto;\n};\n\nTile.prototype.hasMoved = function () {\n  return (this.fromRow() !== -1 && (this.fromRow() !== this.toRow() || this.fromColumn() !== this.toColumn())) ||\n    this.mergedInto;\n};\n\nTile.prototype.fromRow = function () {\n  return this.mergedInto ? this.row : this.oldRow;\n};\n\nTile.prototype.fromColumn = function () {\n  return this.mergedInto ? this.column : this.oldColumn;\n};\n\nTile.prototype.toRow = function () {\n  return this.mergedInto ? this.mergedInto.row : this.row;\n};\n\nTile.prototype.toColumn = function () {\n  return this.mergedInto ? this.mergedInto.column : this.column;\n};\n\nBoard.prototype.addTile = function () {\n  var res = new Tile();\n  Tile.apply(res, arguments);\n  this.tiles.push(res);\n  return res;\n};\nBoard.size = 4;\nBoard.prototype.setPositions = function () {\n  this.cells.forEach((row, rowIndex) => {\n    row.forEach((tile, columnIndex) => {\n      tile.oldRow = tile.row;\n      tile.oldColumn = tile.column;\n      tile.row = rowIndex;\n      tile.column = columnIndex;\n      tile.markForDeletion = false;\n    });\n  });\n};\n\nBoard.fourProbability = 0.1;\n\nBoard.prototype.addRandomTile = function () {\n  var emptyCells = [];\n  for (var r = 0; r < Board.size; ++r) {\n    for (var c = 0; c < Board.size; ++c) {\n      if (this.cells[r][c].value === 0) {\n        emptyCells.push({r: r, c: c});\n      }\n    }\n  }\n  var index = ~~(Math.random() * emptyCells.length);\n  var cell = emptyCells[index];\n  var newValue = Math.random() < Board.fourProbability ? 4 : 2;\n  this.cells[cell.r][cell.c] = this.addTile(newValue);\n};\n\nBoard.prototype.move = function (direction) {\n  // 0 -> left, 1 -> up, 2 -> right, 3 -> down\n  this.clearOldTiles();\n  for (var i = 0; i < direction; ++i) {\n    this.cells = rotateLeft(this.cells);\n  }\n  var hasChanged = this.moveLeft();\n  for (var d = direction; d < 4; ++d) {\n    this.cells = rotateLeft(this.cells);\n  }\n  if (hasChanged) {\n    this.addRandomTile();\n  }\n  this.setPositions();\n  return this;\n};\n\nBoard.prototype.clearOldTiles = function () {\n  this.tiles = this.tiles.filter(tile => tile.markForDeletion === false);\n  this.tiles.forEach(tile => { tile.markForDeletion = true; });\n};\n\nBoard.prototype.hasWon = function () {\n  return this.won;\n};\n\nBoard.deltaX = [-1, 0, 1, 0];\nBoard.deltaY = [0, -1, 0, 1];\n\nBoard.prototype.hasLost = function () {\n  var canMove = false;\n  for (var row = 0; row < Board.size; ++row) {\n    for (var column = 0; column < Board.size; ++column) {\n      canMove |= (this.cells[row][column].value === 0);\n      for (var dir = 0; dir < 4; ++dir) {\n        var newRow = row + Board.deltaX[dir];\n        var newColumn = column + Board.deltaY[dir];\n        if (newRow < 0 || newRow >= Board.size || newColumn < 0 || newColumn >= Board.size) {\n          continue;\n        }\n        canMove |= (this.cells[row][column].value === this.cells[newRow][newColumn].value);\n      }\n    }\n  }\n  \n  return !canMove;\n  //return canMove;\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport { GetScores } from './Scores'\nReactDOM.render(\n  <React.StrictMode>\n    <GetScores />\n  </React.StrictMode>, document.getElementById('highscoreDiv'));\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n  document.getElementById('boardDiv')\n);\n\n//run 'yarn run deploy' to deploy changes to website\n/*body:\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-content: center;\nalign-items: center;\nfont-family: \"Clear Sans\", sans-serif;\nfont-size: 21px;\nbackground: #bdc3c7;\nbackground: linear-gradient(to top, #2c3e50, #bdc3c7);\nposition: relative;\noverflow-x: hidden;\n*/\n\n"],"sourceRoot":""}