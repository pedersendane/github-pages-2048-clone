{"version":3,"sources":["HighScoreBoard.js","Scores.js","App.js","index.js"],"names":["HighScoreBoard","props","highScore","length","map","score","className","id","GetScores","useState","highScores","useEffect","getHighScores","axios","get","then","response","console","log","allScores","data","catch","error","PostHighScore","options","method","url","params","parseInt","result","BoardView","state","board","Board","this","setState","window","location","reload","event","hasWon","keyCode","preventDefault","direction","move","touches","startX","screenX","startY","screenY","changedTouches","deltaX","deltaY","Math","abs","addEventListener","handleKeyDown","bind","removeEventListener","cells","row","rowIndex","_","columnIndex","size","tiles","filter","tile","value","Fragment","onTouchStart","handleTouchStart","onTouchEnd","handleTouchEnd","tabIndex","onRestart","restartGame","React","Component","GameEndOverlay","contents","hasLost","htmlHighScore","document","getElementById","innerHTML","onClick","i","addTile","addRandomTile","setPositions","won","prototype","addScore","moveLeft","hasChanged","currentRow","resultRow","target","targetTile","shift","tile1","mergedInto","tile2","Infinity","Cell","TileView","nextProps","hasMoved","isNew","classArray","push","column","fromRow","toRow","fromColumn","toColumn","classes","join","rotateLeft","matrix","rows","columns","res","Tile","oldRow","oldColumn","markForDeletion","moveTo","apply","arguments","forEach","fourProbability","emptyCells","r","c","cell","random","newValue","clearOldTiles","d","canMove","dir","newRow","newColumn","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4cecd638.chunk.js","sourcesContent":["import React from 'react';\nexport default function HighScoreBoard(props) {\n    const highScore = (props) => {\n        const { highScore } = props;\n        if (highScore.length > 0) {\n            return (\n                highScore.map((score) => {\n                    return (\n                        <div className='high-score' key={score.id}>\n                            <h3 className='score'>High Score: <span id='high-score'>{score.score}</span></h3>\n                        </div>\n                    )\n                })\n            )\n        } else {\n            return (<p > No Highscore Found </p>)\n        }\n\n    }\n    return (<>\n    {highScore(props)}\n    </>)\n}","import React, {\n    useState,\n    useEffect\n} from 'react'\nimport axios from 'axios'\nimport HighScoreBoard from './HighScoreBoard'\n\nexport function GetScores() {\n\n    const [highScore, highScores] = useState('');\n\n    //const url = 'http://highscore-api.herokuapp.com/high-score';\n    const url = 'http://127.0.0.1:8000/high-score';\n    useEffect(() => {\n        getHighScores();\n    }, []);\n\n    const getHighScores = () => {\n        axios.get(url)\n            .then((response) => {\n                console.log(response);\n                const allScores = response.data;\n                highScores(allScores)\n            })\n            .catch(error => console.error(error));\n    }\n    return ( < HighScoreBoard highScore={highScore}/>)\n}\n\nexport function PostHighScore(score) {\n    const options = {\n        method: 'post',\n        url: 'http://localhost:8000/new-high-score',\n        params: {\n          score: parseInt(score),\n        }\n      };\n    axios(options)\n        .then((result) => {\n            console.log(result);\n            return true;\n        }).catch((error) => {\n            console.log(error)\n        })\n}","import React from 'react';\nimport { PostHighScore } from './Scores';\n\nexport default class BoardView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: new Board(),\n    };\n  }\n  restartGame() {\n    this.setState({ board: new Board() });\n    window.location.reload(false); \n  }\n  handleKeyDown(event) {\n    if (this.state.board.hasWon()) {\n      return;\n    }\n    if (event.keyCode >= 37 && event.keyCode <= 40) {\n      event.preventDefault();\n      var direction = event.keyCode - 37;\n      \n      this.setState({board: this.state.board.move(direction)});\n    } else {\n      switch (true) {\n        case event.keyCode === 87:\n          direction = 1;\n          this.setState({ board: this.state.board.move(direction) });\n          break;\n          case event.keyCode === 65:\n           direction = 0;\n            this.setState({ board: this.state.board.move(direction) });\n          break;\n          case event.keyCode === 83:\n           direction = 3;\n            this.setState({ board: this.state.board.move(direction) });\n          break;\n          case event.keyCode === 68:\n           direction = 2;\n            this.setState({ board: this.state.board.move(direction) });\n          break;\n        default:\n          break;\n      }\n      //w = 87 = direction 1\n      //a = 65 = direction 0\n      //s = 83 = direction 3\n      //d = 68 = direction 2\n      \n    }\n  }\n  handleTouchStart(event) {\n    if (this.state.board.hasWon()) {\n      return;\n    }\n    if (event.touches.length !== 1) {\n      return;\n    }\n    this.startX = event.touches[0].screenX;\n    this.startY = event.touches[0].screenY;\n    event.preventDefault();\n  }\n  handleTouchEnd(event) {\n    if (this.state.board.hasWon()) {\n      return;\n    }\n    if (event.changedTouches.length !== 1) {\n      return;\n    }\n    var deltaX = event.changedTouches[0].screenX - this.startX;\n    var deltaY = event.changedTouches[0].screenY - this.startY;\n    var direction = -1;\n    if (Math.abs(deltaX) > 3 * Math.abs(deltaY) && Math.abs(deltaX) > 30) {\n      direction = deltaX > 0 ? 2 : 0;\n    } else if (Math.abs(deltaY) > 3 * Math.abs(deltaX) && Math.abs(deltaY) > 30) {\n      direction = deltaY > 0 ? 3 : 1;\n    }\n    if (direction !== -1) {\n      this.setState({board: this.state.board.move(direction)});\n    }\n  }\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown.bind(this));\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown.bind(this));\n  }\n  render() {\n    var cells = this.state.board.cells.map((row, rowIndex) => {\n      return (\n        <div key={rowIndex}>\n          { row.map((_, columnIndex) => <Cell key={rowIndex * Board.size + columnIndex} />) }\n        </div>\n      );\n    });\n\n    var tiles = this.state.board.tiles\n      .filter(tile => tile.value !== 0)\n      .map(tile => <TileView tile={tile} key={tile.id} />);\n    \n    var score = this.state.board.score\n    \n    return (\n      <React.Fragment>\n        <div className='scoreboard'><h2 id='score'>Score: {score}</h2></div>\n      <div className='board' onTouchStart={this.handleTouchStart.bind(this)} onTouchEnd={this.handleTouchEnd.bind(this)} tabIndex=\"1\">\n        {cells}\n        {tiles}\n        <GameEndOverlay board={this.state.board} onRestart={this.restartGame.bind(this)} />\n        </div>\n      </React.Fragment>\n    );\n  }\n};\n\nvar GameEndOverlay = ({board, onRestart}) => {\n  var contents = '';\n   if (board.hasLost()) {\n     var htmlHighScore = document.getElementById('high-score').innerHTML;\n     var score = parseInt(board.score);\n     var highScore = parseInt(htmlHighScore);\n\n     if (score < highScore) {\n       contents = \"Loser!\"\n     } else {\n       contents = <button className='tryAgain' onClick={PostHighScore(score)}>Submit High Score!</button>\n     }\n  }\n  if (!contents) {\n    return null;\n  }\n  return (\n    <div className='overlay'>\n      {contents}\n      <button className=\"tryAgain\" onClick={onRestart} onTouchEnd={onRestart}>Try again</button>\n    </div>\n  );\n};\n\n\n\n\n\nvar Board = function () {\n  this.tiles = [];\n  this.cells = [];\n  for (var i = 0; i < Board.size; ++i) {\n    this.cells[i] = [this.addTile(), this.addTile(), this.addTile(), this.addTile()];\n  }\n  this.addRandomTile();\n  this.setPositions();\n  this.won = false;\n  this.score = 0;\n};\n\n\n\nBoard.prototype.addScore = function (props) {\n  this.score += props;\n}\n\n\n\nBoard.prototype.moveLeft = function () {\n  var hasChanged = false;\n  for (var row = 0; row < Board.size; ++row) {\n    var currentRow = this.cells[row].filter(tile => tile.value !== 0);\n    var resultRow = [];\n    for (var target = 0; target < Board.size; ++target) {\n      var targetTile = currentRow.length ? currentRow.shift() : this.addTile();\n      if (currentRow.length > 0 && currentRow[0].value === targetTile.value) {\n        var tile1 = targetTile;\n\n        targetTile = this.addTile(targetTile.value);\n\n        tile1.mergedInto = targetTile;\n        var tile2 = currentRow.shift();\n        tile2.mergedInto = targetTile;\n        targetTile.value += tile2.value;\n        //console.log(this)     this will allow you to see what the board is doing \n        \n        this.addScore(targetTile.value);\n\n        \n        \n      }\n      resultRow[target] = targetTile;\n      this.won |= (targetTile.value === Infinity);\n      hasChanged |= (targetTile.value !== this.cells[row][target].value);\n    }\n    this.cells[row] = resultRow;\n  }\n  return hasChanged;\n};\n\n\n\n\n\n\n\n\n\n\n\nclass Cell extends React.Component {\n  shouldComponentUpdate() {\n    return false;\n  }\n  render() {\n    return (\n      <span className='cell'>{''}</span>\n    );\n  }\n};\n\nclass TileView extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (this.props.tile !== nextProps.tile) {\n      return true;\n    }\n    if (!nextProps.tile.hasMoved() && !nextProps.tile.isNew()) {\n      return false;\n    }\n    return true;\n  }\n  render() {\n    var tile = this.props.tile;\n    var classArray = ['tile'];\n    classArray.push('tile' + this.props.tile.value);\n    if (!tile.mergedInto) {\n      classArray.push('position_' + tile.row + '_' + tile.column);\n    }\n    if (tile.mergedInto) {\n      classArray.push('merged');\n    }\n    if (tile.isNew()) {\n      classArray.push('new');\n    }\n    if (tile.hasMoved()) {\n      classArray.push('row_from_' + tile.fromRow() + '_to_' + tile.toRow());\n      classArray.push('column_from_' + tile.fromColumn() + '_to_' + tile.toColumn());\n      classArray.push('isMoving');\n    }\n    var classes = classArray.join(' ');\n    return (\n      <span className={classes}>{tile.value}</span>  \n    );\n  }\n}\n\nvar rotateLeft = function (matrix) {\n  var rows = matrix.length;\n  var columns = matrix[0].length;\n  var res = [];\n  for (var row = 0; row < rows; ++row) {\n    res.push([]);\n    for (var column = 0; column < columns; ++column) {\n      res[row][column] = matrix[column][columns - row - 1];\n    }\n  }\n  return res;\n};\n\nvar Tile = function (value, row, column) {\n  this.value = value || 0;\n  this.row = row || -1;\n  this.column = column || -1;\n  this.oldRow = -1;\n  this.oldColumn = -1;\n  this.markForDeletion = false;\n  this.mergedInto = null;\n  this.id = Tile.id++;\n};\n\nTile.id = 0;\n\nTile.prototype.moveTo = function (row, column) {\n  this.oldRow = this.row;\n  this.oldColumn = this.column;\n  this.row = row;\n  this.column = column;\n};\n\nTile.prototype.isNew = function () {\n  return this.oldRow === -1 && !this.mergedInto;\n};\n\nTile.prototype.hasMoved = function () {\n  return (this.fromRow() !== -1 && (this.fromRow() !== this.toRow() || this.fromColumn() !== this.toColumn())) ||\n    this.mergedInto;\n};\n\nTile.prototype.fromRow = function () {\n  return this.mergedInto ? this.row : this.oldRow;\n};\n\nTile.prototype.fromColumn = function () {\n  return this.mergedInto ? this.column : this.oldColumn;\n};\n\nTile.prototype.toRow = function () {\n  return this.mergedInto ? this.mergedInto.row : this.row;\n};\n\nTile.prototype.toColumn = function () {\n  return this.mergedInto ? this.mergedInto.column : this.column;\n};\n\nBoard.prototype.addTile = function () {\n  var res = new Tile();\n  Tile.apply(res, arguments);\n  this.tiles.push(res);\n  return res;\n};\nBoard.size = 4;\nBoard.prototype.setPositions = function () {\n  this.cells.forEach((row, rowIndex) => {\n    row.forEach((tile, columnIndex) => {\n      tile.oldRow = tile.row;\n      tile.oldColumn = tile.column;\n      tile.row = rowIndex;\n      tile.column = columnIndex;\n      tile.markForDeletion = false;\n    });\n  });\n};\n\nBoard.fourProbability = 0.1;\n\nBoard.prototype.addRandomTile = function () {\n  var emptyCells = [];\n  for (var r = 0; r < Board.size; ++r) {\n    for (var c = 0; c < Board.size; ++c) {\n      if (this.cells[r][c].value === 0) {\n        emptyCells.push({r: r, c: c});\n      }\n    }\n  }\n  var index = ~~(Math.random() * emptyCells.length);\n  var cell = emptyCells[index];\n  var newValue = Math.random() < Board.fourProbability ? 4 : 2;\n  this.cells[cell.r][cell.c] = this.addTile(newValue);\n};\n\nBoard.prototype.move = function (direction) {\n  // 0 -> left, 1 -> up, 2 -> right, 3 -> down\n  this.clearOldTiles();\n  for (var i = 0; i < direction; ++i) {\n    this.cells = rotateLeft(this.cells);\n  }\n  var hasChanged = this.moveLeft();\n  for (var d = direction; d < 4; ++d) {\n    this.cells = rotateLeft(this.cells);\n  }\n  if (hasChanged) {\n    this.addRandomTile();\n  }\n  this.setPositions();\n  return this;\n};\n\nBoard.prototype.clearOldTiles = function () {\n  this.tiles = this.tiles.filter(tile => tile.markForDeletion === false);\n  this.tiles.forEach(tile => { tile.markForDeletion = true; });\n};\n\nBoard.prototype.hasWon = function () {\n  return this.won;\n};\n\nBoard.deltaX = [-1, 0, 1, 0];\nBoard.deltaY = [0, -1, 0, 1];\n\nBoard.prototype.hasLost = function () {\n  var canMove = false;\n  for (var row = 0; row < Board.size; ++row) {\n    for (var column = 0; column < Board.size; ++column) {\n      canMove |= (this.cells[row][column].value === 0);\n      for (var dir = 0; dir < 4; ++dir) {\n        var newRow = row + Board.deltaX[dir];\n        var newColumn = column + Board.deltaY[dir];\n        if (newRow < 0 || newRow >= Board.size || newColumn < 0 || newColumn >= Board.size) {\n          continue;\n        }\n        canMove |= (this.cells[row][column].value === this.cells[newRow][newColumn].value);\n      }\n    }\n  }\n  \n  return !canMove;\n  //return canMove;\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport { GetScores } from './Scores'\nReactDOM.render(\n  <React.StrictMode>\n    <GetScores/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('boardDiv')\n);\n\n//run 'yarn run deploy' to deploy changes to website\n\n\n"],"sourceRoot":""}